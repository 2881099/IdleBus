<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdleBus</name>
    </assembly>
    <members>
        <member name="T:IdleBus">
            <summary>
            空闲对象容器管理，可实现自动创建、销毁、扩张收缩，解决【实例】长时间占用问题
            </summary>
        </member>
        <member name="M:IdleBus.#ctor">
            <summary>
            按空闲时间1分钟，创建空闲容器
            </summary>
        </member>
        <member name="M:IdleBus.#ctor(System.TimeSpan)">
            <summary>
            指定空闲时间、创建空闲容器
            </summary>
            <param name="idle">空闲时间</param>
        </member>
        <member name="T:IdleBus`1">
            <summary>
            空闲对象容器管理，可实现自动创建、销毁、扩张收缩，解决【实例】长时间占用问题
            </summary>
        </member>
        <member name="M:IdleBus`1.#ctor">
            <summary>
            按空闲时间1分钟，创建空闲容器
            </summary>
        </member>
        <member name="M:IdleBus`1.#ctor(System.TimeSpan)">
            <summary>
            指定空闲时间、创建空闲容器
            </summary>
            <param name="idle">空闲时间</param>
        </member>
        <member name="M:IdleBus`1.Get(System.String)">
            <summary>
            根据 key 获得或创建【实例】（线程安全）<para></para>
            key 未注册时，抛出异常
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IdleBus`1.TryGet(System.String)">
            <summary>
            根据 key 获得或创建【实例】（线程安全）<para></para>
            key 未注册时，返回 null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IdleBus`1.Register(System.String,System.Func{`0})">
            <summary>
            注册【实例】
            </summary>
            <param name="key"></param>
            <param name="create">实例创建方法</param>
            <returns></returns>
        </member>
        <member name="P:IdleBus`1.UsageQuantity">
            <summary>
            已创建【实例】数量
            </summary>
        </member>
        <member name="P:IdleBus`1.Quantity">
            <summary>
            注册数量
            </summary>
        </member>
        <member name="E:IdleBus`1.Notice">
            <summary>
            通知事件
            </summary>
        </member>
        <member name="F:IdleBus`1.NoticeType.Register">
            <summary>
            执行 Register 方法的时候
            </summary>
        </member>
        <member name="F:IdleBus`1.NoticeType.Remove">
            <summary>
            执行 Remove 方法的时候，注意：实际会延时释放【实例】
            </summary>
        </member>
        <member name="F:IdleBus`1.NoticeType.AutoCreate">
            <summary>
            自动创建【实例】的时候
            </summary>
        </member>
        <member name="F:IdleBus`1.NoticeType.AutoRelease">
            <summary>
            自动释放不活跃【实例】的时候
            </summary>
        </member>
        <member name="F:IdleBus`1.NoticeType.Get">
            <summary>
            获取【实例】的时候
            </summary>
        </member>
        <member name="P:IdleBus`1.TimeoutScanOptions.IntervalSeconds">
            <summary>
            扫描间隔秒数（默认值：2）
            </summary>
        </member>
        <member name="P:IdleBus`1.TimeoutScanOptions.QuitWaitSeconds">
            <summary>
            扫描的线程空闲多少秒才退出（默认值：10秒）
            </summary>
        </member>
        <member name="P:IdleBus`1.TimeoutScanOptions.BatchQuantity">
            <summary>
            扫描的每批数量（默认值：512）<para></para>
            可防止注册数量太多时导致 CPU 占用过高
            </summary>
        </member>
        <member name="P:IdleBus`1.TimeoutScanOptions.BatchQuantityWaitSeconds">
            <summary>
            达到扫描的每批数量时，线程等待的秒数（默认值：1）
            </summary>
        </member>
        <member name="P:IdleBus`1.ScanOptions">
            <summary>
            扫描过期对象的设置<para></para>
            机制：当窗口里有存活对象时，扫描线程才会开启（只开启一个线程）。<para></para>
            连续多少秒都没存活的对象时，才退出扫描。
            </summary>
        </member>
        <member name="M:IdleScheduler.AddTempTask(System.TimeSpan,System.Action)">
            <summary>
            一次性临时任务（程序重启会丢失）
            </summary>
            <param name="timeout"></param>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:IdleScheduler.AddCycleTask(System.String,System.Int32,System.Int32)">
            <summary>
            添加重复执行的任务
            </summary>
            <param name="text">任务数据</param>
            <param name="times">重复次数</param>
            <param name="seconds">秒数</param>
            <returns></returns>
        </member>
        <member name="M:IdleScheduler.AddCycleTaskRunOnDay(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            添加重复执行的任务（每天的什么时候执行）
            </summary>
            <returns></returns>
        </member>
        <member name="M:IdleScheduler.AddCycleTaskRunOnWeek(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            添加重复执行的任务（每个星期的什么时候执行）
            </summary>
            <returns></returns>
        </member>
        <member name="M:IdleScheduler.AddCycleTaskRunOnMonth(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            添加重复执行的任务（每个月的什么时候执行）
            </summary>
            <returns></returns>
        </member>
        <member name="M:IdleScheduler.RemoveTask(System.String)">
            <summary>
            删除任务
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="F:IdleScheduler.Internal.Interval.SEC">
            <summary>
            按秒触发
            </summary>
        </member>
        <member name="F:IdleScheduler.Internal.Interval.RunOnDay">
            <summary>
            每天 什么时间 触发<para></para>
            如：15:55:59<para></para>
            每天15点55分59秒
            </summary>
        </member>
        <member name="F:IdleScheduler.Internal.Interval.RunOnWeek">
            <summary>
            每星期几 什么时间 触发<para></para>
            如：2:15:55:59<para></para>
            每星期二15点55分59秒
            </summary>
        </member>
        <member name="F:IdleScheduler.Internal.Interval.RunOnMonth">
            <summary>
            每月第几天 什么时间 触发<para></para>
            如：5:15:55:59<para></para>
            每月第五天15点55分59秒
            </summary>
        </member>
    </members>
</doc>
